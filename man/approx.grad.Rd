% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrapper.R
\name{approx.grad}
\alias{approx.grad}
\title{Approximate Gradients}
\usage{
approx.grad(x, y, values = list(), index = 1, eps = 1e-04)
}
\arguments{
\item{x}{character scalar or symbol, name of the node.}

\item{y}{character scalar or symbol, name of the node.}

\item{values}{named list or environment, values that are subsituted for the expressions and placeholders in the graph.}

\item{index}{numeric scalar, index of the target node that needs to be differentiated. Defaults to the first element.}

\item{eps}{numeric scalar, step size. Defaults to 1e-4.}
}
\value{
numeric scalar or array, the derivative of \code{x} with respect to \code{y}.
}
\description{
Differentiate node \code{x} with respect to node \code{y} in the current graph by numerical differentiation.
}
\note{
All placeholders and expressions required to compute node \code{name} must have a value. By default, expression nodes are unevaluated. The values of these nodes can be obtained by evaluating the graph using function \code{$run()}. The values obtained by this function for the expression nodes can be supplied along values for the placeholders via argument \code{values}.

The graph is differentiation by the symmetric difference quotient. This function is mainly used for testing purposes.
}
\author{
Ron Triepels
}
