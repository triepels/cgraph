% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.R
\name{cg_graph_backward}
\alias{cg_graph_backward}
\title{Backward Pass}
\usage{
cg_graph_backward(graph, target)
}
\arguments{
\item{graph}{cg_graph object, graph that is differentiated.}

\item{target}{cg_node object, node in the graph that is differentiated.}
}
\value{
nothing.
}
\description{
Perform a backward pass to evaluate the partial derivatives of a given target node with respect to the nodes in a graph.
}
\note{
All nodes required to compute the target node must first have been evaluated by calling \link[cgraph:cg_graph_forward]{cg_graph_forward}. Only those nodes on which the target node directly or indirectly depend are differentiated. In case the target node evaluates to a vector or array, it is differentiated element-wise. The derivatives have the same shape as the values of the nodes. They can be retrieved via the \code{grad} data member of a \code{cg_node} object.
}
\examples{
# Initialize a computational graph
graph <- cg_graph()

# Add an input
a <- cg_input(name = "a")

# Add a parameter
b <- cg_parameter(4, name = "b")

# Perform some operations
c <- cg_sin(a) + cg_cos(b) - cg_tan(a)

# Set a equal to 2
a$value <- 2

# Evaluate the graph by performing a forward pass
cg_graph_forward(graph, c)

# Differentiate the graph by performing a backward pass
cg_graph_backward(graph, c)

# Retrieve the derivative of c with respect to b
b$grad

}
\author{
Ron Triepels
}
